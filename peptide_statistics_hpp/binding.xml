<?xml version="1.0" encoding="ISO-8859-1" ?>
<binding>
    <bind action="begin" type="download">
         <url value="{livesearch.download}"/>
         <query name="task" valueRef="@task" />
        <query name="user" valueRef="@user"/>
         <compression type="zip" />
        <download port="params" type="file">
            <query name="resource" value="params"/>
        </download>
		<download port="mztab" type="folder">
            <query name="resource" value="mztab"/>
        </download>
        <download port="spec_on_server" type="folder">
                <query name="resource" value="spec_on_server"/>
        </download>
        <download port="novel_psms_w_cosine_external" type="folder">
                <query name="resource" value="novel_psms_w_cosine_external"/>
        </download>
        <download port="peptide_coverage_merged_external" type="folder">
                <query name="resource" value="peptide_coverage_merged_external"/>
        </download>
        <download port="synthetics" type="file">
                <query name="resource" value="synthetics"/>
        </download>
        <download port="peptide_coverage_comparisons" type="folder">
                <query name="resource" value="peptide_coverage_comparisons"/>
        </download>
        <download port="fastadb" type="folder">
            <query name="resource" value="fastadb"/>
        </download>
        <download port="dna" type="folder">
                <query name="resource" value="dna"/>
            </download>
        <download port="gff" type="file">
            <query name="resource" value="gff"/>
        </download>
        <download port="external_provenance" type="file">
            <query name="resource" value="external_provenance"/>
        </download>
        <downloadParams>
            <query name="resource" value="params"/>
        </downloadParams>

    </bind>

    <bind action="extract_from_mztab" tool="extract_from_mztab">
            <inputAsRequirement port="params"    requirement="params"/>
        <inputAsRequirement port="mztab"             requirement="mztab"/>
        <productionToOutput port="peptide_list"    production="peptide_list"/>
        <productionToOutput port="novel_psms"    production="novel_psms"/>
    </bind>

    <bind action="download_latest_kb" tool="download_latest_kb">
        <inputAsRequirement port="params"    requirement="params"/>
        <inputAsRequirement port="fastadb"                  requirement="fastadb"/>
        <inputAsRequirement port="peptide_coverage_comparisons" requirement="peptide_coverage_comparisons"/>
        <productionToOutput port="kb_pep"    production="kb_pep"/>
    </bind>

    <bind action="map_peptides" tool="map_peptides">
        <inputAsRequirement port="peptide_list"             requirement="peptide_list"/>
        <inputAsRequirement port="fastadb"                  requirement="fastadb"/>
        <inputAsRequirement port="exon_fasta"               requirement="exon_fasta"/>
		    <productionToOutput port="peptide_coverage"         production="peptide_coverage"/>
    </bind>

    <bind action="demangle_collection" tool="demangle_collection">
        <inputAsRequirement port="input" requirement="input"/>
        <inputAsRequirement port="params" requirement="params"/>
        <productionToOutput port="output" production="output"/>
    </bind>

    <bind action="calculate_cosine_p" tool="split_identifications">
        <inputAsRequirement port="novel_psms"       requirement="novel_psms"/>
        <productionToOutput port="novel_psms_p"     production="novel_psms_p"/>
        <productionToOutput port="jobs"     production="jobs"/>
    </bind>

    <bind action="calculate_cosine" tool="calculate_cosine">
        <inputAsRequirement port="jobs"       requirement="jobs"/>
        <inputAsRequirement port="novel_psms_p"       requirement="novel_psms_p"/>
        <inputAsRequirement port="synthetics"       requirement="synthetics"/>
        <inputAsRequirement port="spectrum_files"       requirement="spectrum_files"/>
        <productionToOutput port="novel_psms_w_cosine"     production="novel_psms_w_cosine"/>
    </bind>

    <bind action="peptide_protein_cosine" tool="peptide_protein_cosine">
        <inputAsRequirement port="kb_pep"                         requirement="kb_pep"/>
        <inputAsRequirement port="fastadb"                  requirement="fastadb"/>
        <inputAsRequirement port="novel_psms_w_cosine"       requirement="novel_psms_w_cosine"/>
        <inputAsRequirement port="peptide_coverage"        requirement="peptide_coverage"/>
        <inputAsRequirement port="novel_psms_w_cosine_external"       requirement="novel_psms_w_cosine_external"/>
        <inputAsRequirement port="peptide_coverage_merged_external"        requirement="peptide_coverage_merged_external"/>
        <inputAsRequirement port="external_provenance"        requirement="external_provenance"/>
        <productionToOutput port="novel_proteins_w_cosine"     production="novel_proteins_w_cosine"/>
        <productionToOutput port="novel_peptides_w_cosine"     production="novel_peptides_w_cosine"/>
        <productionToOutput port="merged_novel_psms_w_cosine"     production="merged_novel_psms_w_cosine"/>
        <productionToOutput port="novel_exons"     production="novel_exons"/>
        <productionToOutput port="all_mappings"     production="all_mappings"/>
        <productionToOutput port="dataset_proteins_hpp"     production="dataset_proteins_hpp"/>
        <productionToOutput port="dataset_proteins_all"     production="dataset_proteins_all"/>
        <productionToOutput port="task_proteins_hpp"     production="task_proteins_hpp"/>
        <productionToOutput port="task_proteins_all"     production="task_proteins_all"/>
        <productionToOutput port="explorer_export"     production="explorer_export"/>
    </bind>
    
    <!-- Exon mapping -->

    <bind action="generate_summary" tool="generate_summary">
        <inputAsRequirement port="novel_proteins_w_cosine"             requirement="novel_proteins_w_cosine"/>
        <productionToOutput port="summary"      production="summary"/>
    </bind>

    <bind action="make_fasta_from_gff" tool="make_fasta_from_gff">
        <inputAsRequirement port="dna"             requirement="dna"/>
        <inputAsRequirement port="gff"             requirement="gff"/>
        <inputAsRequirement port="params"          requirement="params"/>
        <productionToOutput port="exon_fasta"      production="fastadb"/>
    </bind>

    <!-- <bind action="build_results" tool="buildResults">
        <inputAsRequirement port="novel_proteins_w_cosine"             requirement="novel_proteins_w_cosine"/>
        <productionToOutput port="log"      production="log"/>
    </bind> -->

    <bind action="end" type="upload">
        <url value="{livesearch.upload}"/>
        <query name="task" valueRef="@task"/>
        <contentQuery name="content"/>
        <compression type="zip"/>
        <upload port="unique_peptides_list" type="file">
            <query name="resource" value="unique_peptides_list"/>
        </upload>
        <upload port="protein_coverage" type="file">
            <query name="resource" value="protein_coverage"/>
        </upload>
        <upload port="library_coverage_summary_statistics" type="file">
            <query name="resource" value="library_coverage_summary_statistics"/>
        </upload>
        <upload port="peptide_coverage_merged" type="file">
            <query name="resource" value="peptide_coverage_merged"/>
        </upload>
        <upload port="novel_proteins_w_cosine" type="file">
            <query name="resource" value="novel_proteins_w_cosine"/>
        </upload>
        <upload port="novel_peptides_w_cosine" type="file">
            <query name="resource" value="novel_peptides_w_cosine"/>
        </upload>
        <upload port="merged_novel_psms_w_cosine" type="file">
            <query name="resource" value="merged_novel_psms_w_cosine"/>
        </upload>
        <upload port="novel_exons" type="file">
            <query name="resource" value="novel_exons"/>
        </upload>
        <upload port="library_output" type="folder">
            <query name="resource" value="library_output"/>
        </upload>
        <upload port="all_mappings" type="file">
            <query name="resource" value="all_mappings"/>
        </upload>
        <upload port="dataset_proteins_hpp" type="file">
            <query name="resource" value="dataset_proteins_hpp"/>
        </upload>
        <upload port="dataset_proteins_all" type="file">
            <query name="resource" value="dataset_proteins_all"/>
        </upload>
        <upload port="task_proteins_hpp" type="file">
            <query name="resource" value="task_proteins_hpp"/>
        </upload>
        <upload port="task_proteins_all" type="file">
            <query name="resource" value="task_proteins_all"/>
        </upload>
        <upload port="explorer_export" type="folder">
            <query name="resource" value="explorer_export"/>
        </upload>
        <upload port="summary" type="file">
            <query name="resource" value="summary"/>
        </upload>
        <!-- <upload port="log" type="file">
            <query name="resource" value="log"/>
        </upload> -->
    </bind>
</binding>
